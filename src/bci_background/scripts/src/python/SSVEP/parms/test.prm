System:Configuration matrix OperatorVersion= { Framework Revision Build } 1 2.x % 18:21:08%20Sep%2022%202009 // operator module version information
System:State%20Vector int StateVectorLength= 13 16 1 30 // length of the state vector in bytes
Source:Signal%20Properties:DataIOFilter int SourceCh= 7 16 1 % // number of digitized and stored channels
Source:Signal%20Properties:DataIOFilter int SampleBlockSize= 8 32 1 % // number of samples transmitted at a time
Source:Signal%20Properties:DataIOFilter int SamplingRate= 200 256Hz 1 % // sample rate
Source:Signal%20Properties:DataIOFilter list ChannelNames= 0 // list of channel names
Source:Signal%20Properties:DataIOFilter floatlist SourceChOffset= 7 0 0 0 0 0 0 0 0 % % // Offset for channels in A/D units
Source:Signal%20Properties:DataIOFilter floatlist SourceChGain= 7 1 1 1 1 1 1 1 0.003 % % // gain for each channel (A/D units -> muV)
Storage:Data%20Location:DataIOFilter string DataDirectory= ..\data ..\data % % // path to top level data directory (directory)
Storage:Session:DataIOFilter string SubjectName= test Name % % // subject alias
Storage:Session:DataIOFilter string SubjectSession= 001 001 % % // three-digit session number
Storage:Session:DataIOFilter string SubjectRun= 00 00 % % // two-digit run number
Storage:Documentation:DataIOFilter string ID_System= % // BCI2000 System Code
Storage:Documentation:DataIOFilter string ID_Amp= % // BCI2000 Amp Code
Storage:Documentation:DataIOFilter string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:Timing:DataIOFilter int VisualizeTiming= 1 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceDecimation= 1 1 1 % // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceTime= 2 2 0 % // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter int SourceMin= -100muV -100muV % % // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter int SourceMax= 100muV 100muV % % // raw signal vis Max Value
Source:RDAClientADC string HostName= localhost // the name of the host to connect to
Storage:Documentation:BCI2000FileWriter int SavePrmFile= 0 1 0 1 // save additional parameter file (0=no, 1=yes) (boolean)
Storage:Documentation:BCI2000FileWriter string StorageTime= % // time of beginning of data storage
Source:Source%20Filter:SourceFilter int NotchFilter= 0 0 0 2 // Power line notch filter: 0: disabled, 1: at 50Hz, 2: at 60Hz (enumeration)
Source:Source%20Filter:SourceFilter int HighPassFilter= 0 0 0 1 // Source high pass filter: 0: disabled, 1: at 0.1Hz (enumeration)
Source:Alignment:AlignmentFilter int AlignChannels= 1 0 0 1 // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source:Online%20Processing:TransmissionFilter list TransmitChList= 6 1 2 3 4 5 6 // list of transmitted channels
System:Core%20Connections string SignalSourcePort= 1377 4200 1024 65535 // the SignalSource module's listening port
System:Core%20Connections string SignalSourceIP= 192.168.1.116 127.0.0.1 % % // the SignalSource module's listening IP
System:Configuration matrix SignalSourceVersion= { Framework Revision Build } 1 2.x % 16:20:16%20Oct%2015%202009 // SignalSource version information
System:Configuration matrix SignalSourceFilterChain= 9 { Filter%20Name Position%20String } DataIOFilter 0 RDAClientADC 1 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 SourceFilter 1.01 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain
Visualize:Processing%20Stages int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
Filtering:SpatialFilter int SpatialFilterType= 1 2 0 3 // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter:SpatialFilter matrix SpatialFilter= 6 6 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 % % // columns represent input channels, rows represent output channels
Filtering:SpatialFilter:SpatialFilter intlist SpatialFilterCAROutput= 0 // when using CAR filter type: list of output channels, or empty for all channels
Filtering:SpatialFilter:SpatialFilter int SpatialFilterMissingChannels= 1 0 0 1 // how to handle missing channels 0: ignore, 1: report error (enumeration)
System:Command%20Line%20Arguments variant MatlabWD= ./Matlab_SsvepMov/SsvepMov_Sim01_5 ./Matlab_SsvepMov/SsvepMov_Sim01_5 ./Matlab_SsvepMov/SsvepMov_Sim01_5 ./Matlab_SsvepMov/SsvepMov_Sim01_5 
System:Core%20Connections string OperatorIP= 127.0.0.1 127.0.0.1 % % // the Operator module's IP
MatlabSig:Design intlist SSVEPChannel= 6 1 2 3 4 5 6 // ssvep channels number list 
System:Core%20Connections string SignalProcessingPort= 1374 4200 1024 65535 // the SignalProcessing module's listening port
System:Core%20Connections string SignalProcessingIP= 192.168.1.116 127.0.0.1 % % // the SignalProcessing module's listening IP
System:Configuration matrix SignalProcessingVersion= { Framework Revision Build } 1 3.0.5 4229,%202012/07/03%2018:02:30 2012/07/03%2020:12:06 // SignalProcessing version information
System:Configuration matrix SignalProcessingFilterChain= 2 { Filter%20Name Position%20String } SpatialFilter 2.B MatlabFilter 2.C // SignalProcessing filter chain
Visualize:Processing%20Stages int VisualizeSpatialFilter= 0 0 0 1 // Visualize SpatialFilter output (boolean)
Visualize:Processing%20Stages int VisualizeMatlabFilter= 0 0 0 1 // Visualize MatlabFilter output (boolean)
System:Command%20Line%20Arguments variant PythonAppClassFile= Client.py Client.py Client.py Client.py 
Source:Signal%20Properties:DataIOFilter list ReferenceChannelName= 0 % % a // list of labels for reference channel or channels
Source:Signal%20Properties:DataIOFilter list GroundChannelName= 0 % % a // label of the ground channel
Source:Playback int EnslavePython= 0 0 0 1 // force BCPy2000 modules to follow states supplied by the source module without being able to change them (boolean)
PythonApp string ApplicationDescription= Ssvep%20Moving%20Targets % a z // Identifies the stimulus presentation module
PythonApp int ShowSignalTime= 0 0 0 1 // show a timestamp based on the number of processed samples (boolean)
PythonApp:Design int TrialsPerBlock= 200 20 1 % // number of trials in one block
PythonApp:Design int BlocksPerRun= 12 20 1 % // number of sub-blocks in one run
PythonApp:Screen float WindowSize= .95 1.0 0.0 1.0 // size of the stimulus window, proportional to the screen
PythonApp:Task intlist Mode= 3 2 0 1 
PythonApp:Task intlist TargetNum= 1 3 
PythonApp:Task floatlist HzList= 3 9 11.7 14.5 // Hz List
PythonApp:StimuliMode intlist Shape= 4 0 4 0 0 // flckers' Shape
PythonApp:StimuliMode floatlist Color= 4 0 255 0 255 // flckers' color
PythonApp:StimuliMode floatlist Size= 2 120 120 // flckers' size
PythonApp:Design int StartDuration= 2000 // Duration of start cue(ms)
PythonApp:Design int DareDuration= 5000 // Duration of Dare cue(ms)
System:Core%20Connections string ApplicationPort= 1376 4200 1024 65535 // the Application module's listening port
System:Core%20Connections string ApplicationIP= 192.168.1.116 127.0.0.1 % % // the Application module's listening IP
System:Configuration matrix ApplicationVersion= { Framework Revision Build } 1 2.x % 18:20:49%20Sep%2022%202009 // Application version information
System:Configuration matrix ApplicationFilterChain= 1 { Filter%20Name Position%20String } PythonAppFilter 3 // Application filter chain
Visualize:Processing%20Stages int VisualizePythonAppFilter= 0 0 0 1 // Visualize PythonAppFilter output (boolean)
